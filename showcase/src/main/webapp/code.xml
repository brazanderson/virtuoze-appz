<codes>
  <code id="alert">
    new Alert().add(new Paragraph().html("{0}").css().append(Alert.Color.SUCCESS);
    new Alert().add(new Paragraph().html("{1}").css().append(Alert.Color.INFO);
    new Alert().add(new Paragraph().html("{2}").css().append(Alert.Color.WARNING);
    new Alert().add(new Paragraph().html("{3}").css().append(Alert.Color.DANGER);
  </code>
  <code id="alert.dismissable">
    new Alert().add(new Paragraph().html("{0}")).closeable().css().append(Alert.Color.SUCCESS);
  </code>
  <code id="badge">
    new Badge().text("{0}")
  </code>
  <code id="badge.adapt.pill">
    Pills pills = new Pills();
    pills.addPill().text("{0}").addBadge().text("{1}");
    pills.addPill().text("{2}");
  </code>
  <code id="breadcrumb">
    Breadcrumb breadcrumb = new Breadcrumb();
    breadcrumb.addItem().text("Home").onClick(new ClickHandler() {
      @Override
      public void onClick(ClickEvent event) {
        Window.alert("Home item clicked");
      }
    });
    breadcrumb.addItem().text("Profile");
    breadcrumb.addItem().text("User");
  </code>
  <code id="button.color">
    new Button().text("Default");
    new Button().text("Primary").css().append(ButtonColor.PRIMARY);
    new Button().text("Success").css().append(ButtonColor.SUCCESS);
    new Button().text("Info").css().append(ButtonColor.INFO);
    new Button().text("Warning").css().append(ButtonColor.WARNING);
    new Button().text("Danger").css().append(ButtonColor.DANGER);
    new Button().text("Link").css().append(ButtonColor.LINK);
  </code>
  <code id="button.size">
    new Button().text("Large").css().append(Button.Size.LARGE);
    new Button().text("Default");
    new Button().text("Success").css().append(Button.Size.SMALL);
    new Button().text("Info").css().append(ButtonColor.X_SMALL);
  </code>
  <code id="button.block">
    new Button().text("Block").block();
  </code>
  <code id="button.active">
    final Button btn = new Button().text("Block").activate();
    btn.onClick(new ClickHandler() {
      @Override
      public void onClick(ClickEvent event) {
        if(btn.active()){
          btn.deactivate();
          return;
        }
        btn.activate();
      }
    });
  </code>
  <code id="button.disable">
    new Button().text("Block").disable().onClick(new ClickHandler() {
      @Override
      public void onClick(ClickEvent event) {
        // It should not be called on a disabled button.
        Window.alert("If this message is appearing, it is wrong... :|");
      }
    });
  </code>
  <code id="button.toggleable">
    new Button().text("Toggle").toggleable();
  </code>
  <code id="button.dropdown">
    DropButton btn = new DropButton();
    btn.text("Primary").css().append(ButtonColor.PRIMARY);
    btn.menu().addItem().text("Action");
    btn.menu().addItem().text("Another Action");
    btn.menu().addDivider();
    btn.menu().addItem().text("Vituous Action").onClick(new ClickHandler() {
      @Override
      public void onClick(ClickEvent event) {
        Window.alert("You've got the power. Go virtuous. :)");
      }
    });
  </code>
  <code id="button.split">
    SplitButton btn = new SplitButton();
    btn.text("Primary").css().append(ButtonColor.PRIMARY);
    btn.menu().addItem().text("Action");
    btn.menu().addItem().text("Another Action");
    btn.menu().addDivider();
    btn.menu().addItem().text("Vituous Action").onClick(new ClickHandler() {
      @Override
      public void onClick(ClickEvent event) {
        Window.alert("You've got the power. Go virtuous. :)");
      }
    });
  </code>
  <code id="button.dropup">
    DropButton btn = new DropButton().up();
    btn.text("Primary").css().append(ButtonColor.PRIMARY);
    btn.menu().addItem().text("Action");
    btn.menu().addItem().text("Another Action");
    btn.menu().addDivider();
    btn.menu().addItem().text("Vituous Action").onClick(new ClickHandler() {
      @Override
      public void onClick(ClickEvent event) {
        Window.alert("You've got the power. Go virtuous. :)");
      }
    });
    
    SplitButton split = new SplitButton().up();
    split.text("Primary").css().append(ButtonColor.PRIMARY);
    split.menu().addItem().text("Action");
    split.menu().addItem().text("Another Action");
    split.menu().addDivider();
    split.menu().addItem().text("Vituous Action").onClick(new ClickHandler() {
      @Override
      public void onClick(ClickEvent event) {
        Window.alert("You've got the power. Go virtuous. :)");
      }
    });
  </code>
  <code id="button.group">
    new ButtonGroup().add(new Button().text("left"))
    .add(new Button().text("middle"))
    .add(new Button().text("right"));
  </code>
  <code id="button.group.sizing">
    new ButtonGroup().add(new Button().text("left"))
    .add(new Button().text("middle"))
    .add(new Button().text("right")).css().append(ButtonGroup.Size.LARGE);
  </code>
  <code id="button.group.vertical">
    new ButtonGroup().add(new Button().text("left"))
    .add(new Button().text("middle"))
    .add(new Button().text("right")).css().append(ButtonGroup.Orientation.VERTICAL);
  </code>
  <code id="button.group.block">
    new ButtonGroup(ButtonGroup.Type.BLOCK).add(new Button().text("left"))
    .add(new Button().text("middle"))
    .add(new Button().text("right")).css().append(ButtonGroup.Orientation.VERTICAL);
  </code>
  <code id="button.group.checkbox">
    new ButtonGroup().add(new Button().text("left"))
    .add(new Button().text("middle"))
    .add(new Button().text("right")).checkbox();
  </code>
  <code id="button.group.radio">
    new ButtonGroup().add(new Button().text("left"))
    .add(new Button().text("middle"))
    .add(new Button().text("right")).radio();
  </code>
  <code id="client.maven.parent">
    <dependencyManagement>
      <dependencies>
        <dependency>
          <groupId>com.brazoft.virtuoze</groupId>
          <artifactId>client</artifactId>
          <version>{0}</version>
          <type>pom</type>
          <scope>import</scope>
        </dependency>
      </dependencies>
    </dependencyManagement>
  </code>
  <code id="client.maven.dependencies">
    <dependencies>
      <dependency>
        <groupId>com.google.gwt</groupId>
        <artifactId>gwt-user</artifactId>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>com.google.gwt</groupId>
        <artifactId>gwt-servlet</artifactId>
        <version>${gwt.version}</version>
      </dependency>

      <dependency>
        <groupId>com.googlecode.gwtquery</groupId>
        <artifactId>gwtquery</artifactId>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>org.fusesource.restygwt</groupId>
        <artifactId>restygwt</artifactId>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>javax.validation</groupId>
        <artifactId>validation-api</artifactId>
        <scope>provided</scope>
      </dependency>
    </dependencies>
  </code>
  <code id="client.maven.archetype">
    <pre><code>mvn archetype:generate -DarchetypeGroupId=com.brazoft.virtuoze -DarchetypeArtifactId=client-archetype -DarchetypeVersion={0}</code></pre>
  </code>
  <code id="container.fixed">
    new Container(Container.Type.FIXED);
  </code>
  <code id="container.fluid">
    new Container(Container.Type.FLUID);
  </code>
  <code id="container.row">
    Row row = new Container(Container.Type.FLUID).addRow();
  </code>
  <code id="container.column">
    row.addColumn().add(new Text().text("It's a column"));
  </code>
  <code id="container.clearfix">
    row.addColumn().clearfix(ViewPort.X_SMALL);
  </code>
  <code id="container.span">
    row.addColumn().span(1, ViewPort.MEDIUM);
    row.addColumn().span(2, ViewPort.MEDIUM).span(1, ViewPort.X_SMALL);
  </code>
  <code id="container.offset">
    row.addColumn().offset(1, ViewPort.MEDIUM);
    row.addColumn().offset(2, ViewPort.MEDIUM).offset(1, ViewPort.X_SMALL);
  </code>
  <code id="icon">
    new Button().text("Iconic").icon(Icon.LEAF);
    new Button().text("Iconic").icon(Icon.CLOUD).css().append(ButtonColor.PRIMARY);
  </code>
  <code id="typography.heading">
    new Heading(Heading.Level.ONE).text("H1. Heading");
    new Heading(Heading.Level.TWO).text("H2. Heading");
    new Heading(Heading.Level.THREE).text("H3. Heading");
    new Heading(Heading.Level.FOUR).text("H4. Heading");
    new Heading(Heading.Level.FIVE).text("H5. Heading");
    new Heading(Heading.Level.SIX).text("H6. Heading");
  </code>
  <code id="typography.heading.classes">
    new Paragraph().text("H1. Heading").css().set(HeadingClass.LEVEL_ONE);
    new Paragraph().text("H2. Heading").css().set(HeadingClass.LEVEL_TWO);
    new Paragraph().text("H3. Heading").css().set(HeadingClass.LEVEL_THREE);
    new Paragraph().text("H4. Heading").css().set(HeadingClass.LEVEL_FOUR);
    new Paragraph().text("H5. Heading").css().set(HeadingClass.LEVEL_FIVE);
    new Paragraph().text("H6. Heading").css().set(HeadingClass.LEVEL_SIX);
  </code>
  <code id="typography.heading.secondary">
    new Heading(Heading.Level.ONE).text("H1. Heading").headline("Secondary Text");
    new Heading(Heading.Level.TWO).text("H2. Heading").headline("Secondary Text");
    new Heading(Heading.Level.THREE).text("H3. Heading").headline("Secondary Text");
    new Heading(Heading.Level.FOUR).text("H4. Heading").headline("Secondary Text");
    new Heading(Heading.Level.FIVE).text("H5. Heading").headline("Secondary Text");
    new Heading(Heading.Level.SIX).text("H6. Heading").headline("Secondary Text");
  </code>
  <code id="typography.paragraph">
    new Paragraph().html("{0}");
  </code>
  <code id="typography.paragraph.lead">
    new Paragraph().html("{0}").lead();
  </code>
  <code id="typography.blockquote">
    new Blockquote().text("{0}");
  </code>
  <code id="typography.blockquote.footer">
    new Blockquote().text("{0}").footer("{1}");
  </code>
  <code id="typography.blockquote.reverse">
    new Blockquote().text("{0}").footer("{1}").reverse();
  </code>
  <code id="typography.list.unordered">
    OrderList list = new OrderList(OrderList.Type.UNORDERED);
    list.addItem().text("Lorem ipsum dolor sit amet");
    list.addItem().text("Consectetur adipiscing elit");
    list.addItem().text("Integer molestie lorem at massa");
  </code>
  <code id="typography.list.ordered">
    OrderList list = new OrderList(OrderList.Type.ORDERED);
    list.addItem().text("Lorem ipsum dolor sit amet");
    list.addItem().text("Consectetur adipiscing elit");
    list.addItem().text("Integer molestie lorem at massa");
  </code>
  <code id="typography.list.unstyled">
    list = new OrderList(OrderList.Type.ORDERED);
    list.css().append(OrderList.Style.UNSTYLED);
    list.addItem().text("Lorem ipsum dolor sit amet");
    list.addItem().text("Consectetur adipiscing elit");
    list.addItem().text("Integer molestie lorem at massa");
  </code>
  <code id="typography.list.inline">
    list = new OrderList(OrderList.Type.ORDERED);
    list.css().append(OrderList.Style.INLINE);
    list.addItem().text("Lorem ipsum dolor sit amet");
    list.addItem().text("Consectetur adipiscing elit");
    list.addItem().text("Integer molestie lorem at massa");
  </code>
  <code id="typography.description">
    DescriptionList description = new DescriptionList();
    description.addItem("Description lists", "A description list is perfect for defining terms.");
    description.addItem("Euismod", "Vestibulum id ligula porta felis euismod semper eget lacinia odio sem nec elit. Donec id elit non mi porta gravida at eget metus.");
  </code>
  <code id="typography.description.horizontal">
    DescriptionList description = new DescriptionList().horizontal();
    description.addItem("Description lists", "A description list is perfect for defining terms.");
    description.addItem("Euismod", "Vestibulum id ligula porta felis euismod semper eget lacinia odio sem nec elit. Donec id elit non mi porta gravida at eget metus.");
  </code>
</codes>